---
apiVersion: apps/v1
kind: {{ RESOURCE_TYPE }}
metadata:
  labels:
    test-network-function.com/generic: target
  name: test
  namespace: {{ TNF_EXAMPLE_CNF_NAMESPACE }}
spec:
  replicas: {{ REPLICAS }}
  selector:
    matchLabels:
      app: {{ APP }}
  template:
    metadata:
      labels:
        app: {{ APP }}
        test-network-function.com/generic: target
        test-network-function.com/container: target
      annotations:
        test-network-function.com/container_tests: '["PRIVILEGED_POD","PRIVILEGED_ROLE"]' # optional
        test-network-function.com/defaultnetworkinterface: '"eth0"' # optional
        k8s.v1.cni.cncf.io/networks: {{ MULTUS_ANNOTATION }}
      name: test
    spec:
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      serviceAccountName: test-pod-sa
      containers:
        - image: quay.io/testnetworkfunction/cnf-test-partner:latest
          imagePullPolicy: IfNotPresent
          name: test
          ports:
            - name: "http-probe"
              containerPort: 8080
          resources:
            limits:
              memory: 512Mi
              cpu: 0.25
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /tmp/message"]
            preStop:
              exec:
                command: ["/bin/sh", "-c", "killall -0 tail"]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              httpHeaders:
                - name: health-check
                  value: liveness
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              httpHeaders:
                - name: health-check
                  value: readiness
            initialDelaySeconds: 10
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /health
              port: 8080
              httpHeaders:
                - name: health-check
                  value: startup
            failureThreshold: 10
            periodSeconds: 5
          command: ["./bin/app"]
          terminationMessagePolicy: FallbackToLogsOnError
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ APP }}
              topologyKey: "kubernetes.io/hostname"
